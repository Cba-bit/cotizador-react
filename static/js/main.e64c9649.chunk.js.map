{"version":3,"sources":["components/Header.js","helpers.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","DivStyled","div","LabelStyled","label","SelectStyled","select","RadioStyled","input","ButtonStyled","button","Error","Formulario","setResumen","setCargando","useState","marca","year","plan","datos","setDatos","error","setError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","console","log","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qjBAIA,IAAMA,EAAmBC,IAAOC,OAAV,KAOhBC,EAAcF,IAAOG,GAAV,KAmBFC,EAZA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACd,OACI,cAACN,EAAD,UACI,cAACG,EAAD,UAAcG,O,gBCanB,SAASC,EAAgBC,GAC5B,OAAOA,EAAMC,OAAO,GAAGC,cAAgBF,EAAMG,MAAM,G,mnCC5BvD,IAAMC,EAAYX,IAAOY,IAAV,KAMTC,EAAcb,IAAOc,MAAV,KAIXC,EAAef,IAAOgB,OAAV,KAQZC,EAAcjB,IAAOkB,MAAV,KAIXC,EAAenB,IAAOoB,OAAV,KAkBZC,EAAQrB,IAAOY,IAAV,KA6IIU,EApII,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAAkB,EACtBC,mBAAS,CAC/BC,MAAO,GACPC,KAAM,GACNC,KAAM,KAJsC,mBACzCC,EADyC,KAClCC,EADkC,OAOtBL,oBAAS,GAPa,mBAOzCM,EAPyC,KAOlCC,EAPkC,KAUxCN,EAAsBG,EAAtBH,MAAOC,EAAeE,EAAfF,KAAMC,EAASC,EAATD,KAGfK,EAAqB,SAAAC,GACvBJ,EAAS,2BACFD,GADC,kBAEHK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAkDlC,OACI,uBAAMC,SA7CY,SAAAJ,GAGlB,GAFAA,EAAEK,iBAEmB,KAAjBb,EAAMc,QAAiC,KAAhBb,EAAKa,QAAiC,KAAhBZ,EAAKY,OAAtD,CAKAR,GAAS,GAGT,IAAIS,EAAY,IAGVC,ED1FP,SAA+Bf,GAClC,OAAO,IAAIgB,MAAOC,cAAgBjB,ECyFXkB,CAAsBlB,GAGzCc,GAA2B,EAAbC,EAAiBD,EAAa,IAM5CA,ED9FD,SAAuBf,GAC1B,IAAIoB,EAEJ,OAAQpB,GACJ,IAAK,UACDoB,EAAa,IACb,MACJ,IAAK,YACDA,EAAa,KACb,MACJ,IAAK,WACDA,EAAa,KAMrB,OAAOA,EC6ESC,CAAcrB,GAASe,EAKnC,IAAMO,ED9EP,SAAqBpB,GACxB,MAAgB,WAATA,EAAoB,IAAM,IC6ENqB,CAAYrB,GACnCsB,QAAQC,IAAIH,GACZP,EAAYW,WAAWJ,EAAiBP,GAAWY,QAAQ,GAE3D7B,GAAY,GAEZ8B,YAAW,WACP9B,GAAY,GAEZD,EAAW,CACPgC,WAAYC,OAAOf,GACnBZ,YAEL,UArCCG,GAAS,IAyCb,UACKD,EAAQ,cAACV,EAAD,gDAAmD,KAE5D,eAACV,EAAD,WACI,cAACE,EAAD,oBACA,eAACE,EAAD,CACIqB,KAAK,QACLC,MAAOX,EACP+B,SAAUxB,EAHd,UAII,wBAAQI,MAAM,GAAd,8BACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,4BAIR,eAAC1B,EAAD,WACI,cAACE,EAAD,qBACA,eAACE,EAAD,CACIqB,KAAK,OACLC,MAAOV,EACP8B,SAAUxB,EAHd,UAII,wBAAQI,MAAM,GAAd,8BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,wBAIR,eAAC1B,EAAD,WACI,cAACE,EAAD,mBACA,cAACI,EAAD,CACIyC,KAAK,QACLtB,KAAK,OACLC,MAAM,SACNsB,QAAkB,WAAT/B,EACT6B,SAAUxB,IACX,IARP,SAUI,cAAChB,EAAD,CACIyC,KAAK,QACLtB,KAAK,OACLC,MAAM,WACNsB,QAAkB,aAAT/B,EACT6B,SAAUxB,IACX,IAhBP,cAmBA,cAACd,EAAD,CAAcuC,KAAK,SAAnB,0B,6LC5KZ,IAAME,EAAoB5D,IAAOY,IAAV,KA6BRiD,EArBC,SAAC,GAAe,IAAbhC,EAAY,EAAZA,MAEPH,EAAsBG,EAAtBH,MAAOC,EAAeE,EAAfF,KAAMC,EAASC,EAATD,KAErB,MAAc,KAAVF,GAAyB,KAATC,GAAwB,KAATC,EAAoB,KAEnD,eAACgC,EAAD,WACI,0DACA,+BACI,yCAAYtD,EAAgBoB,MAC5B,wCAAWpB,EAAgBsB,MAC3B,mDAAmBD,Y,uoBCpBnC,IAAMmC,EAAU9D,IAAO+D,EAAV,KAQPC,EAAsBhE,IAAOY,IAAV,KASnBqD,EAAkBjE,IAAO+D,EAAV,KA+BNG,EAvBG,SAAC,GAAoB,IAAlBX,EAAiB,EAAjBA,WACjB,OAAsB,IAAfA,EACH,cAACO,EAAD,mDAEA,cAACE,EAAD,UACI,cAACG,EAAA,EAAD,CAAiBC,UAAU,OAAOC,UAAU,YAA5C,SACI,cAACC,EAAA,EAAD,CACIC,WAAW,YAEXC,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAHjC,SAII,eAACT,EAAD,6BACmB,+BAAOV,QAHrBA,QChBVoB,G,MAnBC,WACZ,OACI,sBAAKN,UAAU,mBAAf,UACI,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,+B,8OCR3B,IAAMO,EAAa5E,IAAOY,IAAV,KAKViE,EAAuB7E,IAAOY,IAAV,KAqCXkE,MAhCf,WAAgB,IAAD,EACmBrD,mBAAS,CACnC8B,WAAY,EACZ1B,MAAO,CACHH,MAAO,GACPC,KAAM,GACNC,KAAM,MANH,mBACJmD,EADI,KACKxD,EADL,OAUqBE,oBAAS,GAV9B,mBAUJuD,EAVI,KAUMxD,EAVN,KAaHK,EAAsBkD,EAAtBlD,MAAO0B,EAAewB,EAAfxB,WAEf,OACI,eAACqB,EAAD,WACI,cAAC,EAAD,CAAQvE,OAAO,yBAEf,eAACwE,EAAD,WACI,cAAC,EAAD,CAAYtD,WAAYA,EAAYC,YAAaA,IAEhDwD,EAAW,cAAC,EAAD,IAAc,KAE1B,cAAC,EAAD,CAASnD,MAAOA,IAEdmD,EAAmD,KAAxC,cAAC,EAAD,CAAWzB,WAAYA,WCjCrC0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e64c9649.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26c6da;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n`;\r\n\r\nconst Header = ({ titulo }) => {\r\n    return (\r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","// obtiene la diferencia de años\r\n\r\nexport function obtenerDiferenciaYear(year) {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n// calcula el total a pagar segun la marca\r\nexport function calcularMarca(marca) {\r\n    let incremento;\r\n\r\n    switch (marca) {\r\n        case 'europeo':\r\n            incremento = 1.3;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n}\r\n\r\n// calcula el tipo de seguro\r\nexport function obtenerPlan(plan) {\r\n    return plan === 'basico' ? 1.2 : 1.5;\r\n}\r\n\r\n// Muestra la primer letra Mayuscula\r\n\r\nexport function primerMayuscula(texto) {\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helpers';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst DivStyled = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst LabelStyled = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst SelectStyled = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    --webkit-appearance: none;\r\n`;\r\n\r\nconst RadioStyled = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst ButtonStyled = styled.button`\r\n    background-color: #00838f;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    margin-top: 2rem;\r\n    transition: background-color 0.3s ease;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        background-color: #26c6da;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\nconst Formulario = ({ setResumen, setCargando }) => {\r\n    const [datos, setDatos] = useState({\r\n        marca: '',\r\n        year: '',\r\n        plan: '',\r\n    });\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    // Extraer los valores del state\r\n    const { marca, year, plan } = datos;\r\n\r\n    // Leer los datos del formulario y colocarlos en el state\r\n    const obtenerInformacion = e => {\r\n        setDatos({\r\n            ...datos,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    // Cuando el usuario envia el form\r\n\r\n    const cotizarSeguro = e => {\r\n        e.preventDefault();\r\n\r\n        if (marca.trim() === '' || year.trim() === '' || plan.trim() === '') {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        setError(false);\r\n\r\n        // una base de 2000\r\n        let resultado = 2000;\r\n\r\n        // obtener la diferencia de años\r\n        const diferencia = obtenerDiferenciaYear(year);\r\n\r\n        // por cada año hay que restar el 3%\r\n        resultado -= (diferencia * 3 * resultado) / 100;\r\n\r\n        // Americano 15%\r\n        // Asiatico 5%\r\n        // Europeo 30%\r\n\r\n        resultado = calcularMarca(marca) * resultado;\r\n\r\n        // basico 20%\r\n        // completo 50%\r\n\r\n        const incrementoPlan = obtenerPlan(plan);\r\n        console.log(incrementoPlan);\r\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\r\n\r\n        setCargando(true);\r\n\r\n        setTimeout(() => {\r\n            setCargando(false);\r\n\r\n            setResumen({\r\n                cotizacion: Number(resultado),\r\n                datos,\r\n            });\r\n        }, 2000);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={cotizarSeguro}>\r\n            {error ? <Error>Todos los campos son obligatorios</Error> : null}\r\n\r\n            <DivStyled>\r\n                <LabelStyled>Marca</LabelStyled>\r\n                <SelectStyled\r\n                    name='marca'\r\n                    value={marca}\r\n                    onChange={obtenerInformacion}>\r\n                    <option value=''>-- Seleccione --</option>\r\n                    <option value='americano'>Americano</option>\r\n                    <option value='europeo'>Europeo</option>\r\n                    <option value='asiatico'>Asiatico</option>\r\n                </SelectStyled>\r\n            </DivStyled>\r\n\r\n            <DivStyled>\r\n                <LabelStyled>Año</LabelStyled>\r\n                <SelectStyled\r\n                    name='year'\r\n                    value={year}\r\n                    onChange={obtenerInformacion}>\r\n                    <option value=''>-- Seleccione --</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                    <option value='2018'>2018</option>\r\n                    <option value='2017'>2017</option>\r\n                    <option value='2016'>2016</option>\r\n                    <option value='2015'>2015</option>\r\n                    <option value='2014'>2014</option>\r\n                    <option value='2013'>2013</option>\r\n                    <option value='2012'>2012</option>\r\n                </SelectStyled>\r\n            </DivStyled>\r\n\r\n            <DivStyled>\r\n                <LabelStyled>Plan</LabelStyled>\r\n                <RadioStyled\r\n                    type='radio'\r\n                    name='plan'\r\n                    value='basico'\r\n                    checked={plan === 'basico'}\r\n                    onChange={obtenerInformacion}\r\n                />{' '}\r\n                Basico\r\n                <RadioStyled\r\n                    type='radio'\r\n                    name='plan'\r\n                    value='completo'\r\n                    checked={plan === 'completo'}\r\n                    onChange={obtenerInformacion}\r\n                />{' '}\r\n                Completo\r\n            </DivStyled>\r\n            <ButtonStyled type='submit'>Cotizar!</ButtonStyled>\r\n        </form>\r\n    );\r\n};\r\n\r\nFormulario.propTypes = {\r\n    setResumen: PropTypes.func.isRequired,\r\n    setCargando: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Formulario;\r\n","import React from 'react';\r\nimport { primerMayuscula } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838f;\r\n    color: #fff;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst Resumen = ({ datos }) => {\r\n    // extraer de datos\r\n    const { marca, year, plan } = datos;\r\n\r\n    if (marca === '' || year === '' || plan === '') return null;\r\n    return (\r\n        <ContenedorResumen>\r\n            <h2>Resumen de Cotización</h2>\r\n            <ul>\r\n                <li>Marca: {primerMayuscula(marca)}</li>\r\n                <li>Plan: {primerMayuscula(plan)}</li>\r\n                <li>Año del Auto: {year}</li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    );\r\n};\r\n\r\nResumen.propTypes = {\r\n    datos: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Resumen;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: 0.5rem;\r\n    border: 1px solid #26c6da;\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838f;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`;\r\n\r\nconst Resultado = ({ cotizacion }) => {\r\n    return cotizacion === 0 ? (\r\n        <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\r\n    ) : (\r\n        <ResultadoCotizacion>\r\n            <TransitionGroup component='span' className='resultado'>\r\n                <CSSTransition\r\n                    classNames='resultado'\r\n                    key={cotizacion}\r\n                    timeout={{ enter: 500, exit: 500 }}>\r\n                    <TextoCotizacion>\r\n                        El total es: $ <span>{cotizacion}</span>\r\n                    </TextoCotizacion>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </ResultadoCotizacion>\r\n    );\r\n};\r\n\r\nResultado.propTypes = {\r\n    cotizacion: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Resultado;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='sk-fading-circle'>\r\n            <div className='sk-circle1 sk-circle'></div>\r\n            <div className='sk-circle2 sk-circle'></div>\r\n            <div className='sk-circle3 sk-circle'></div>\r\n            <div className='sk-circle4 sk-circle'></div>\r\n            <div className='sk-circle5 sk-circle'></div>\r\n            <div className='sk-circle6 sk-circle'></div>\r\n            <div className='sk-circle7 sk-circle'></div>\r\n            <div className='sk-circle8 sk-circle'></div>\r\n            <div className='sk-circle9 sk-circle'></div>\r\n            <div className='sk-circle10 sk-circle'></div>\r\n            <div className='sk-circle11 sk-circle'></div>\r\n            <div className='sk-circle12 sk-circle'></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Resumen from './components/Resumen';\nimport Resultado from './components/Resultado';\nimport Spinner from './components/Spinner';\nimport { useState } from 'react';\n\nimport styled from '@emotion/styled';\n\nconst Contenedor = styled.div`\n    max-width: 600px;\n    margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n    background-color: #ffffff;\n    padding: 3rem;\n`;\n\nfunction App() {\n    const [resumen, setResumen] = useState({\n        cotizacion: 0,\n        datos: {\n            marca: '',\n            year: '',\n            plan: '',\n        },\n    });\n\n    const [cargando, setCargando] = useState(false);\n\n    // Extraer datos\n    const { datos, cotizacion } = resumen;\n\n    return (\n        <Contenedor>\n            <Header titulo='Cotizador de Seguros' />\n\n            <ContenedorFormulario>\n                <Formulario setResumen={setResumen} setCargando={setCargando} />\n\n                {cargando ? <Spinner /> : null}\n\n                <Resumen datos={datos} />\n\n                {!cargando ? <Resultado cotizacion={cotizacion} /> : null}\n            </ContenedorFormulario>\n        </Contenedor>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}